[project]
name = "nlp-backend"
version = "0.1.0"
description = "NLP Backend with RAG capabilities"
requires-python = ">=3.9"
dependencies = [
    "fastapi",
    "uvicorn[standard]",
    "requests",
    "python-dotenv",
    "aiohttp",
    "python-multipart",
    "httpx",
    "hf_xet",
    "ollama",
    "langchain",
    "langchain-community",
    "langchain-huggingface",
    "langchain-ollama",
    "langchain-chroma",
    "chromadb>=0.4.0,<0.6.0",
    "sentence-transformers",
    "pypdf",
    "tiktoken",
    "nemoguardrails==0.13.0",
    "reportlab",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio",
    "black",
    "isort",
    "flake8",
    "ruff",
]

[tool.uv]
dev-dependencies = [
    "pytest>=6.0",
    "pytest-asyncio>=0.18.0",
    "black>=22.0",
    "isort>=5.0",
    "flake8>=4.0",
    "ruff>=0.1.0",
]

[tool.black]
line-length = 88
target-version = ['py39']

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"